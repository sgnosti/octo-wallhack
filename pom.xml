<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>de.sgnosti.wallhack</groupId>
	<artifactId>octo-wallhack</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>data-processing</name>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
	
		<!-- SMACK -->
		
		<!-- Spark: Stream processing -->		
		<dependency>
		    <groupId>org.apache.spark</groupId>
		    <artifactId>spark-streaming_2.11</artifactId>
		    <version>2.1.0</version>
		</dependency>
		
		<!-- Mesos: Software to manage compute clusters -->
		<dependency>
		    <groupId>org.apache.mesos</groupId>
		    <artifactId>mesos</artifactId>
		    <version>1.1.1</version>
		</dependency>
		
		<!-- Akka: Toolkit for building  message-driven applications based on actor framework -->
		<dependency>
		    <groupId>com.typesafe.akka</groupId>
		    <artifactId>akka-actor_2.11</artifactId>
		    <version>2.4.17</version>
		</dependency>
		
		<!-- Cassandra: NoSQL database -->
		<dependency>
		    <groupId>org.apache.cassandra</groupId>
		    <artifactId>cassandra-all</artifactId>
		    <version>3.10</version>
		</dependency>
		
		<!-- Kafka: Distributed stream processing (monitoring, log aggregation, event sourcing...) -->
		<dependency>
		    <groupId>org.apache.kafka</groupId>
		    <artifactId>kafka_2.11</artifactId>
		    <version>0.10.2.0</version>
		</dependency>
		
		<!-- 
		Others:
			- Apache Hadoop: framework that allows for the distributed processing of large data sets across clusters of computers using simple programming models
			- Apache Flink: Scalable Stream and Batch Data Processing
			- Apache SAMOA is a distributed streaming machine learning (ML) framework
			- Apache Beam: provides an advanced unified programming model, allowing you to implement batch and streaming data processing jobs that can run on any execution engine.
			- Apache Mahout: A Scalable machine learning and data mining library.
			- Apache ZooKeeper: A high-performance coordination service for distributed applications.
			- Apache Hive: data warehouse infrastructure built on top of Hadoop for providing data summarization, query, and analysis
			- Apache Pig: high-level language for expressing data analysis programs, coupled with infrastructure for evaluating these programs
		 -->

		<!-- Twitter Streaming API -->
		<dependency>
		    <groupId>org.twitter4j</groupId>
		    <artifactId>twitter4j-stream</artifactId>
		    <version>4.0.6</version>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.httpcomponents</groupId>
		    <artifactId>httpclient</artifactId>
		    <version>4.5.2</version>
		</dependency>
		
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

</project>
